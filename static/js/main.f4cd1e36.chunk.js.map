{"version":3,"sources":["resources/powerupsokina.svg","resources/shobhobe-logo.svg","resources/Sokina_Smile.svg","components/InputField/index.js","components/CustomButton/index.js","components/Header/index.js","dumbyApi/index.js","pages/SignInSignUp/index.js","pages/SignIn/index.js","pages/SignUp/index.js","pages/Profile/index.js","pages/MainPage/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getStyles","makeStyles","input","display","marginTop","inputLabel","position","inputField","border","borderRadius","lineHeight","padding","focus","borderColor","blue","error","InputField","label","name","others","styles","id","FormControl","className","fullWidth","InputLabel","htmlFor","disableAnimation","shrink","InputBase","classes","focused","FormHelperText","root","background","props","primary","secondary","boxShadow","marginBottom","CustomButton","children","Button","body","logo","margin","paddng","contactButton","withRouter","pathname","location","Grid","container","justify","alignItems","src","alt","variant","Typography","database","phone","password","height","content","flexGrow","maxWidth","intro","boxSizing","form","width","SignInSignUp","history","useState","setPhone","loading","setLoading","direction","item","signInImage","Divider","placeholder","onChange","event","regex","RegExp","value","target","test","disabled","startAdornment","InputAdornment","code","svg","ArrowDropDown","onClick","e","preventDefault","number","found","some","Promise","resolve","reject","setTimeout","checkNumber","then","push","state","catch","err","console","log","iconButton","CustomCheckbox","withStyles","color","checked","Checkbox","CustomCheckCircle","colorPrimary","CheckCircle","SignIn","showPassword","setShowPassword","pass","fields","setFields","setError","to","handleChange","prev","endAdornment","type","Lock","IconButton","Visibility","VisibilityOff","FormControlLabel","control","checkCredentials","Link","underline","href","SignUp","textAlign","link","Profile","profileImage","MainPage","exact","path","component","render","App","CssBaseline","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4cd1e36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/powerupsokina.e364eb0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/shobhobe-logo.a951b0aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/Sokina_Smile.688af46b.svg\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {FormControl, InputBase, InputLabel, FormHelperText} from '@material-ui/core' \nimport {blue} from '@material-ui/core/colors'\nimport {makeStyles} from '@material-ui/styles'\n\nconst getStyles = makeStyles({\n  input: {\n    display: 'flex',\n    marginTop: '10px'\n  },\n  inputLabel:{\n    position: 'relative'\n  }, \n  inputField:{\n    border: '2px solid #e7e7e7',\n    borderRadius: '4px',\n    lineHeight: '12px',\n    padding: '0 10px',\n  },\n  focus: {\n    borderColor: blue[100]\n  },\n  error:{\n    borderColor: '#ff8e8e'\n  }\n})\n\nconst InputField = ({label, name, ...others})=>{\n  \n  const styles = getStyles()\n  const id = `${name}_input`\n  \n  return(\n    <FormControl className={styles.input} fullWidth error={others.error}>\n      <InputLabel className={styles.inputLabel} htmlFor={id} disableAnimation shrink>{label}</InputLabel>\n      <InputBase\n        name={name}\n        {...others} \n        classes={{\n          focused: styles.focus,\n          error: styles.error\n        }} \n        className={styles.inputField} \n        id={id}\n      />\n      {others.error && <FormHelperText>Password Incorrect! Please try again</FormHelperText>}\n    </FormControl>\n  )\n}\n\nInputField.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n}\n\nexport default InputField","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Button} from '@material-ui/core'\nimport {makeStyles} from '@material-ui/styles'\n\nconst getStyles = makeStyles({\n  root:{\n    background: props=>props.background? props.background.primary : '#e7e7e7',\n    '&:hover': {\n      background: props=>props.background? props.background.secondary : '#bdbdbd',\n    },\n    borderRadius: '4px',\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.25)',\n    marginTop: '15px',\n    marginBottom: '15px'\n  }\n})\n\nconst CustomButton = props=>{\n  const {children, background, ...others} = props\n  const styles = getStyles(props)\n\n  return(\n    <Button fullWidth className={styles.root} {...others}>{children}</Button>\n  )\n}\n\nCustomButton.propTypes = {\n  children: PropTypes.string.isRequired,\n  background: PropTypes.shape({\n    primary: PropTypes.string.isRequired,\n    secondary: PropTypes.string.isRequired\n  })\n}\n\nexport default CustomButton","import React from 'react'\nimport {withRouter} from 'react-router-dom'\nimport {Grid, Button, Typography} from '@material-ui/core'\nimport {makeStyles} from '@material-ui/styles'\n\nimport logo from '../../resources/shobhobe-logo.svg'\n\nconst getStyles = makeStyles({\n  body: { \n    background: 'white',\n  },\n  logo: {\n    margin: '0 5%',\n    paddng: 0\n  },\n  contactButton: {\n    margin: '0 5%',\n    background: 'white',\n    ':hover': {\n      background: '#fcfcfc'\n    },\n    borderRadius: '4px',\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.25)'\n  }\n})\n\nconst Header = props=>{\n\n  const {location:{pathname}} = props\n\n  const classes = getStyles()\n\n  return(\n    <Grid className={classes.body} container justify='space-between' alignItems='center'>\n      <img className={classes.logo} src={logo} alt='shobhobe-logo'/>\n      <Button className={classes.contactButton} variant='contained'>\n        <Typography variant='button'>\n          {pathname==='/signup'? 'Sign In':'Contact Us'}\n        </Typography>\n      </Button>\n    </Grid>\n  )\n}\n\nexport default withRouter(Header)","const database = [\n  {phone: '01714521199', password: '#shobhobe'}\n]\n\nexport const checkNumber = number=>{\n  const found = database.some(item=>item.phone===number)\n  return new Promise((resolve,reject)=>{\n    setTimeout(\n      ()=>resolve({found}),\n      1000\n    )\n  })\n}\n\nexport const checkCredentials = (number, password)=>{\n  const found = database.some(item=>(item.phone===number && item.password===password))\n  return new Promise((resolve,reject)=>{\n    setTimeout(\n      ()=>resolve({found}),\n      1000\n    )\n  })\n}","import React,{useState} from 'react'\nimport {Grid, Typography, InputAdornment, Divider} from '@material-ui/core'\nimport {makeStyles} from '@material-ui/styles'\nimport ReactCountryFlag from 'react-country-flag'\nimport {ArrowDropDown} from '@material-ui/icons'\n\nimport signInImage from '../../resources/powerupsokina.svg'\nimport InputField from '../../components/InputField'\nimport CustomButton from '../../components/CustomButton'\nimport Header from '../../components/Header'\n\nimport {checkNumber} from '../../dumbyApi'\n\nconst getStyles = makeStyles({\n  background: {\n    background: '#fcfcfc',\n    height: \"100vh\"\n  },\n  content: {\n    flexGrow: 1,\n  },\n  body: {\n    maxWidth: '500px',\n    background: 'white',\n    padding: '15px 20px',\n    border: '1px solid #e7e7e7',\n    borderRadius: '10px'\n  },\n  intro: {\n    boxSizing: 'border-box',\n    marginTop: '5px',\n  },\n  form:{\n    width: '100%'\n  }\n})\n\nconst SignInSignUp = props=>{\n\n  const {history} = props\n\n  const [phone, setPhone] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n\n  const styles = getStyles()\n\n  const handleChange = event=>{\n    const regex = RegExp('^[0-9]{0,11}$')\n    const {target:{value}} = event\n    if(regex.test(value))\n      setPhone(value)\n  }\n\n  const handleSubmit = e=>{\n    e.preventDefault()\n    setLoading(true)\n    checkNumber(phone)\n      .then(({found})=>{\n        if(found){\n          history.push({\n            pathname: '/signin',\n            state: {phone}\n          })\n        }else{\n          history.push({\n            pathname: '/signup',\n            state: {phone}\n          })\n        }\n      })\n      .catch(err=>{\n        console.log(err)\n        setLoading(false)\n      })\n  }\n\n  return(\n    <Grid className={styles.background} container direction='column' justify='flex-start' alignItems='stretch'>\n      <Grid container item>\n        <Header />\n      </Grid>\n      <Grid className={styles.content} container item justify=\"center\" alignItems=\"center\">\n        <Grid className={styles.body} container direction='column' justify='center' alignItems='center'>\n          <img src={signInImage} alt='loginimage' />\n          <Typography className={styles.intro} variant='h6' >\n            Enter the ShobHobe Universe!\n            <Divider variant='fullWidth'/>\n          </Typography>\n          <form className={styles.form}>\n            <InputField\n              label=\"Phone No:\"\n              name=\"phone-no\"\n              placeholder=\"Please enter your phone no.\"\n              onChange={handleChange}\n              value={phone}\n              disabled={loading}\n              startAdornment={\n                <InputAdornment position='start'>\n                  <ReactCountryFlag code='BD' svg/>\n                  <ArrowDropDown />\n                </InputAdornment>\n              }\n            />\n            <CustomButton onClick={handleSubmit} disabled={loading}>Sign In/ Sign Up</CustomButton>\n          </form>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default SignInSignUp","import React,{useState} from 'react'\nimport {Redirect} from 'react-router-dom'\nimport {Grid, Typography, InputAdornment, Checkbox, FormControlLabel, Link, IconButton, Divider} from '@material-ui/core'\nimport {makeStyles, withStyles} from '@material-ui/styles'\nimport ReactCountryFlag from 'react-country-flag'\nimport {ArrowDropDown, CheckCircle, Lock, Visibility, VisibilityOff} from '@material-ui/icons'\n\nimport signInImage from '../../resources/powerupsokina.svg'\nimport InputField from '../../components/InputField'\nimport CustomButton from '../../components/CustomButton'\nimport Header from '../../components/Header'\n\nimport {checkCredentials} from '../../dumbyApi'\n\nconst getStyles = makeStyles({\n  background: {\n    background: '#fcfcfc',\n    height: \"100vh\"\n  },\n  content: {\n    flexGrow: 1,\n  },\n  body: {\n    maxWidth: '500px',\n    background: 'white',\n    padding: '15px 20px',\n    border: '1px solid #e7e7e7',\n    borderRadius: '10px'\n  },\n  intro: {\n    boxSizing: 'border-box',\n    marginTop: '5px',\n  },\n  form: {\n    width: '100%'\n  },\n  iconButton:{\n    padding: 0\n  }\n})\n\n//Checkbox with custom styles\nconst CustomCheckbox = withStyles({\n  root: {\n    color: '#e7e7e7',\n    '&$checked': {\n      color: '#27C278',\n    },\n  },\n  checked: {},\n})(props => <Checkbox color=\"default\" {...props} />)\n\n//CheckCircle Icon with custom styles\nconst CustomCheckCircle = withStyles({\n  colorPrimary:{\n    color: '#27C278'\n  }\n})(props=><CheckCircle {...props}/>)\n\n//Sign in UI for the '/signin' route\nconst SignIn = props=>{\n  \n  const {location:{state}, history} = props\n  \n  const [showPassword, setShowPassword] = useState(false)\n  const [fields, setFields] = useState({\n    phone: state? state.phone:'',\n    pass: ''\n  })\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState({})\n\n\n  if(!state)\n    return <Redirect to='/'/> \n\n  const styles = getStyles()\n\n  const handlePasswordVisibility = ()=>{\n    setShowPassword(prev=>!prev)\n  }\n\n  const handleChange = event=>{\n    const {target:{name, value}} = event\n    switch(name){\n      case 'phone':{\n        const regex = RegExp('^[0-9]{0,11}$')\n        if(regex.test(value)){\n          setFields(prev=>({\n            ...prev,\n            [name]: value\n          }))\n        }\n        break\n      }\n      default:\n        setFields(prev=>({\n          ...prev,\n          [name]: value\n        }))\n    }\n  }\n\n  const handleSubmit = ()=>{\n    setLoading(true)\n    checkCredentials(fields.phone, fields.pass)\n      .then(({found})=>{\n        if(!found){\n          setError({\n            pass: 'Password Mismatch'\n          })\n          setLoading(false)\n        }else{\n          setError({})\n          history.push('/profile')\n        }\n      })\n      .catch(err=>{\n        console.log(err)\n        setLoading(false)\n      })\n  }\n\n  return(\n    <Grid className={styles.background} container direction='column' justify='flex-start' alignItems='stretch'>\n      <Grid container item>\n        <Header />\n      </Grid>\n      <Grid className={styles.content} container item justify=\"center\" alignItems=\"center\">\n        <Grid className={styles.body} container direction='column' justify='center' alignItems='center'>\n          <img src={signInImage} alt='loginimage' />\n          <Typography className={styles.intro} variant='h6' >\n            Enter the ShobHobe Universe!\n            <Divider variant='fullWidth'/>\n          </Typography>\n          <form className={styles.form}>\n            <InputField\n              label=\"Phone No:\"\n              name=\"phone\"\n              value={fields.phone}\n              onChange={handleChange}\n              disabled\n              placeholder=\"Please enter your phone no.\"\n              startAdornment={\n                <InputAdornment position='start'>\n                  <ReactCountryFlag code='BD' svg/>\n                  <ArrowDropDown />\n                </InputAdornment>\n              }\n              endAdornment={\n                <InputAdornment position='end'>\n                  <CustomCheckCircle \n                    color='primary'\n                  />\n                </InputAdornment>\n              }\n            />\n            <InputField\n              label=\"Password:\"\n              name=\"pass\"\n              type={showPassword? 'text':'password'}\n              value={fields.pass}\n              onChange={handleChange}\n              disabled={loading}\n              error={error.pass? true: false}\n              startAdornment={\n                <InputAdornment position='start'>\n                  <Lock />\n                </InputAdornment>\n              }\n              endAdornment={\n                <InputAdornment position='end'>\n                  <IconButton className={styles.iconButton} onClick={handlePasswordVisibility}>\n                    {showPassword? <Visibility />:<VisibilityOff /> }\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n            <FormControlLabel\n              control={\n                <CustomCheckbox/>\n              }\n              label='Remember Me' \n            />\n            <CustomButton \n              disabled={loading} \n              background={{primary: '#ffe335', secondary: '#fbc028'}}\n              onClick={handleSubmit}\n            >\n              Sign In\n            </CustomButton>\n          </form>\n          <Link underline='none' href='asdasd'>\n            Forgot Password?\n          </Link>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default SignIn","import React,{useState} from 'react'\nimport {Grid, Typography, InputAdornment, Divider} from '@material-ui/core'\nimport {makeStyles} from '@material-ui/styles'\nimport ReactCountryFlag from 'react-country-flag'\nimport {ArrowDropDown} from '@material-ui/icons'\n\nimport signInImage from '../../resources/powerupsokina.svg'\nimport InputField from '../../components/InputField'\nimport CustomButton from '../../components/CustomButton'\nimport Header from '../../components/Header'\n\nconst getStyles = makeStyles({\n  background: {\n    background: '#fcfcfc',\n    height: \"100vh\"\n  },\n  content: {\n    flexGrow: 1,\n  },\n  body: {\n    maxWidth: '500px',\n    background: 'white',\n    padding: '15px 20px',\n    border: '1px solid #e7e7e7',\n    borderRadius: '10px'\n  },\n  intro: {\n    boxSizing: 'border-box',\n    marginTop: '5px',\n  },\n})\n\nconst SignUp = props=>{\n\n  const {location:{state}, history} = props\n\n  const [phone, setPhone] = useState(state? state.phone:'')\n\n  const styles = getStyles()\n\n  const handleChange = event=>{\n    const regex = RegExp('^[0-9]{0,11}$')\n    const {value} = event\n    if(regex.test(value))\n      setPhone(value)\n  }\n\n  const handleSubmit = e=>{\n    history.push('/profile')\n  }\n\n  return(\n    <Grid className={styles.background} container direction='column' justify='flex-start' alignItems='stretch'>\n      <Grid container item>\n        <Header />\n      </Grid>\n      <Grid className={styles.content} container item justify=\"center\" alignItems=\"center\">\n        <Grid className={styles.body} container direction='column' justify='center' alignItems='center'>\n          <img src={signInImage} alt='loginimage' />\n          <Typography className={styles.intro} variant='h6' >\n            Enter the ShobHobe Universe!\n            <Divider variant='fullWidth'/>\n          </Typography>\n          <InputField\n            label=\"Phone No:\"\n            name=\"phone-no\"\n            placeholder=\"Please enter your phone no.\"\n            onChange={handleChange}\n            value={phone}\n            startAdornment={\n              <InputAdornment position='start'>\n                <ReactCountryFlag code='BD' svg/>\n                <ArrowDropDown />\n              </InputAdornment>\n            }\n          />\n          <CustomButton \n            background={{primary: '#ffe335', secondary: '#fbc028'}}  \n            onClick={handleSubmit}\n          >\n              Sign Up\n          </CustomButton>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default SignUp","import React from 'react'\nimport {Grid, Typography, Divider, Link} from '@material-ui/core'\nimport {makeStyles} from '@material-ui/styles'\n\nimport profileImage from '../../resources/Sokina_Smile.svg'\nimport CustomButton from '../../components/CustomButton'\nimport Header from '../../components/Header'\n\nconst getStyles = makeStyles({\n  background: {\n    background: '#e6ffdd',\n    height: \"100vh\"\n  },\n  content: {\n    flexGrow: 1,\n  },\n  body: {\n    maxWidth: '500px',\n    background: 'white',\n    padding: '15px 20px',\n    border: '1px solid #e7e7e7',\n    borderRadius: '10px'\n  },\n  intro: {\n    boxSizing: 'border-box',\n    marginTop: '5px',\n    textAlign: 'center',\n    width: '100%'\n  },\n  link: {\n    color: '#4a4a4a'\n  }\n})\n\nconst Profile = props=>{\n  \n  const styles = getStyles()\n\n  return(\n    <Grid className={styles.background} container direction='column' justify='flex-start' alignItems='stretch'>\n      <Grid container item>\n        <Header />\n      </Grid>\n      <Grid className={styles.content} container item justify=\"center\" alignItems=\"center\">\n        <Grid className={styles.body} container direction='column' justify='center' alignItems='center'>\n          <img src={profileImage} alt='loginimage' />\n          <Typography className={styles.intro} variant='h6' >\n            Welcome to ShobHobe!\n            <Divider variant='fullWidth'/>\n          </Typography>\n          <Typography className={styles.intro} variant='caption' >\n            Press below to unlock your dashboard\n          </Typography>\n          <CustomButton \n              background={{primary: '#e73948', secondary: '#d32f2f'}}\n            >\n              + Add Order\n          </CustomButton>\n          <Link classes={{root: styles.link}} underline='none' href='asdasd'>\n            Change Store Info\n          </Link>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default Profile","import React from 'react'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\n\nimport SignInSignUp from '../SignInSignUp'\nimport SignIn from '../SignIn'\nimport SignUp from '../SignUp'\nimport Profile from '../Profile'\n\nconst MainPage = props=>{\n  return(\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={SignInSignUp}/>\n        <Route path=\"/signin\" component={SignIn}/>\n        <Route path=\"/signup\" component={SignUp}/>\n        <Route path=\"/profile\" component={Profile}/>\n        <Route render={()=><>Error 404! Page Not Found</>}/>\n      </Switch>\n    </BrowserRouter>\n  ) \n}\n\nexport default MainPage","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport MainPage from './pages/MainPage'\n\nfunction App() {\n  return (\n    <>\n      <CssBaseline/>\n      <MainPage />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}